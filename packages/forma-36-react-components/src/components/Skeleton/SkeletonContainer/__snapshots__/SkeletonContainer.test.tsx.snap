// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the component 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-0)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-1)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-0"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-1"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-2"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-2.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-2.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom animation speed 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-46)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-47)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-46"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-47"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="5s"
          id="animation-48"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-48.begin+0.25s"
          dur="5s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-48.begin+0.5s"
          dur="5s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom aria label 1`] = `
<svg
  aria-label="Custom Aria Label"
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Custom Aria Label
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-15)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-16)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-15"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-16"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-17"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-17.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-17.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom aspect ratio 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMin slice"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-24)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-25)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-24"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-25"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-26"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-26.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-26.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom clip id 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#some-clip-id)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-27)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="some-clip-id"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-27"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-28"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-28.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-28.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom gradient id 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-29)"
    height="100%"
    style={
      Object {
        "fill": "url(#some-gradient-id)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-29"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="some-gradient-id"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-30"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-30.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-30.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom height 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-21)"
    height="50%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-22)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-21"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-22"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-23"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-23.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-23.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom primary color 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-31)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-32)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-31"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-32"
    >
      <stop
        offset="0%"
        stopColor="#ffffff"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-33"
          repeatCount="indefinite"
          values="#ffffff; #f7f9fa; #ffffff"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-33.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#ffffff; #f7f9fa; #ffffff"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#ffffff"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-33.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#ffffff; #f7f9fa; #ffffff"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom primary opacity 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-34)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-35)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-34"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-35"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={0}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-36"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-36.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={0}
      >
        <animate
          attributeName="stop-color"
          begin="animation-36.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom secondary color 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-37)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-38)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-37"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-38"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-39"
          repeatCount="indefinite"
          values="#e5ebed; #ffffff; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#ffffff"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-39.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #ffffff; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-39.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #ffffff; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom secondary opacity 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-40)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-41)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-40"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-41"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-42"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={0}
      >
        <animate
          attributeName="stop-color"
          begin="animation-42.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-42.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom testId 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="someId"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-12)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-13)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-12"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-13"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-14"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-14.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-14.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with a custom width 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-18)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-19)",
      }
    }
    width="50%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-18"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-19"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-20"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-20.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-20.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component with an additional class name 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer className"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-3)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-4)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-3"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-4"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-5"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-5.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-5.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the component without animation 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-43)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-44)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-43"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-44"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      />
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      />
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      />
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the svg with a custom height 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height={100}
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width="100%"
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-49)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-50)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-49"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-50"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-51"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-51.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-51.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders the svg with a custom width 1`] = `
<svg
  aria-label="Loading component..."
  className="SkeletonContainer"
  data-test-id="cf-ui-skeleton-form"
  height="100%"
  preserveAspectRatio="xMidYMid meet"
  role="img"
  width={100}
>
  <title>
    Loading component...
  </title>
  <rect
    clipPath="url(#cf-ui-skeleton-clip-52)"
    height="100%"
    style={
      Object {
        "fill": "url(#cf-ui-skeleton-clip-gradient-53)",
      }
    }
    width="100%"
    x="0"
    y="0"
  />
  <defs>
    <clipPath
      id="cf-ui-skeleton-clip-52"
    >
      <SkeletonBodyText
        lineHeight={16}
        marginBottom={8}
        numberOfLines={2}
        offsetLeft={0}
        offsetTop={0}
      />
    </clipPath>
    <linearGradient
      id="cf-ui-skeleton-clip-gradient-53"
    >
      <stop
        offset="0%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          dur="2s"
          id="animation-54"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="50%"
        stopColor="#f7f9fa"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-54.begin+0.25s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
      <stop
        offset="100%"
        stopColor="#e5ebed"
        stopOpacity={1}
      >
        <animate
          attributeName="stop-color"
          begin="animation-54.begin+0.5s"
          dur="2s"
          repeatCount="indefinite"
          values="#e5ebed; #f7f9fa; #e5ebed"
        />
      </stop>
    </linearGradient>
  </defs>
</svg>
`;

exports[`renders with unique default ids 1`] = `
<div>
  <SkeletonContainer
    animate={true}
    animateId="animation-8"
    ariaLabel="Loading component..."
    backgroundColor="#e5ebed"
    backgroundOpacity={1}
    clipId="cf-ui-skeleton-clip-6"
    foregroundColor="#f7f9fa"
    foregroundOpacity={1}
    gradientId="cf-ui-skeleton-clip-gradient-7"
    height="100%"
    preserveAspectRatio="xMidYMid meet"
    speed={2}
    svgHeight="100%"
    svgWidth="100%"
    testId="first"
    width="100%"
  >
    <SkeletonBodyText
      lineHeight={16}
      marginBottom={8}
      numberOfLines={2}
      offsetLeft={0}
      offsetTop={0}
    />
  </SkeletonContainer>
  <SkeletonContainer
    animate={true}
    animateId="animation-11"
    ariaLabel="Loading component..."
    backgroundColor="#e5ebed"
    backgroundOpacity={1}
    clipId="cf-ui-skeleton-clip-9"
    foregroundColor="#f7f9fa"
    foregroundOpacity={1}
    gradientId="cf-ui-skeleton-clip-gradient-10"
    height="100%"
    preserveAspectRatio="xMidYMid meet"
    speed={2}
    svgHeight="100%"
    svgWidth="100%"
    testId="first"
    width="100%"
  >
    <SkeletonBodyText
      lineHeight={16}
      marginBottom={8}
      numberOfLines={2}
      offsetLeft={0}
      offsetTop={0}
    />
  </SkeletonContainer>
</div>
`;
